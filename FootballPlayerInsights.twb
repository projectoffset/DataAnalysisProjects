<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0718.1543                               -->
<workbook original-version='18.1' source-build='2019.2.2 (20192.19.0718.1543)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Top Five Teams' caption='Top Teams by Player Value' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <aliases>
          <alias key='1' value='Top Team' />
          <alias key='5' value='Top Five Teams' />
          <alias key='10' value='Top Ten Teams' />
          <alias key='20' value='Top Twenty Teams' />
        </aliases>
        <members>
          <member alias='Top Team' value='1' />
          <member alias='Top Five Teams' value='5' />
          <member alias='Top Ten Teams' value='10' />
          <member alias='Top Twenty Teams' value='20' />
        </members>
      </column>
      <column alias='Top Five' caption='Top Players by Position' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <aliases>
          <alias key='5' value='Top Five' />
        </aliases>
        <members>
          <member alias='Top Five' value='5' />
        </members>
      </column>
    </datasource>
    <datasource caption='English Players+ (Player Data)' inline='true' name='federated.12uwyh20n6ys001ev15ri005o5ef' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Player Data' name='excel-direct.07xn5m11uygcie17mczgi1ufx4gr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/MD/Documents/Player Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Data to Join' name='pdf.1coyo0e0pkxahw1ecwao80r0zw5x'>
            <connection class='pdf' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='257' origfilename='C:/Users/MD/Documents/Data to Join.pdf' password='' pgFrom='' pgTo='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[English Players+].[ID]' />
              <expression op='[Page    1 Table  1+].[ID]' />
            </expression>
          </clause>
          <relation all='true' name='English Players+' type='union'>
            <columns header='yes'>
              <column datatype='string' name='ID' />
              <column datatype='string' name='Name' />
              <column datatype='integer' name='Age' />
              <column datatype='string' name='Photo' />
              <column datatype='string' name='Nationality' />
              <column datatype='integer' name='Overall' />
              <column datatype='integer' name='Potential' />
              <column datatype='integer' name='Special' />
              <column datatype='string' name='Preferred Foot' />
              <column datatype='integer' name='International Reputation' />
              <column datatype='integer' name='Weak Foot' />
              <column datatype='string' name='Skill Moves' />
              <column datatype='string' name='Work Rate' />
              <column datatype='string' name='Body Type' />
              <column datatype='string' name='Real Face' />
              <column datatype='string' name='Position' />
              <column datatype='string' name='Jersey Number' />
              <column datatype='string' name='Joined' />
              <column datatype='string' name='Contract Valid Until' />
              <column datatype='string' name='Height' />
              <column datatype='integer' name='Weight' />
              <column datatype='string' name='Sheet' />
              <column datatype='string' name='Table Name' />
            </columns>
            <relation connection='excel-direct.07xn5m11uygcie17mczgi1ufx4gr' name='English Players' table='[&apos;English Players$&apos;]' type='table'>
              <columns gridOrigin='A1:U716:no:A1:U716:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='integer' name='Age' ordinal='2' />
                <column datatype='string' name='Photo' ordinal='3' />
                <column datatype='string' name='Nationality' ordinal='4' />
                <column datatype='integer' name='Overall' ordinal='5' />
                <column datatype='integer' name='Potential' ordinal='6' />
                <column datatype='integer' name='Special' ordinal='7' />
                <column datatype='string' name='Preferred Foot' ordinal='8' />
                <column datatype='integer' name='International Reputation' ordinal='9' />
                <column datatype='integer' name='Weak Foot' ordinal='10' />
                <column datatype='string' name='Skill Moves' ordinal='11' />
                <column datatype='string' name='Work Rate' ordinal='12' />
                <column datatype='string' name='Body Type' ordinal='13' />
                <column datatype='string' name='Real Face' ordinal='14' />
                <column datatype='string' name='Position' ordinal='15' />
                <column datatype='string' name='Jersey Number' ordinal='16' />
                <column datatype='string' name='Joined' ordinal='17' />
                <column datatype='string' name='Contract Valid Until' ordinal='18' />
                <column datatype='string' name='Height' ordinal='19' />
                <column datatype='integer' name='Weight' ordinal='20' />
              </columns>
            </relation>
            <relation connection='excel-direct.07xn5m11uygcie17mczgi1ufx4gr' name='Non English Players' table='[&apos;Non English Players$&apos;]' type='table'>
              <columns gridOrigin='A1:U750:no:A1:U750:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='integer' name='Age' ordinal='2' />
                <column datatype='string' name='Photo' ordinal='3' />
                <column datatype='string' name='Nationality' ordinal='4' />
                <column datatype='integer' name='Overall' ordinal='5' />
                <column datatype='integer' name='Potential' ordinal='6' />
                <column datatype='integer' name='Special' ordinal='7' />
                <column datatype='string' name='Preferred Foot' ordinal='8' />
                <column datatype='integer' name='International Reputation' ordinal='9' />
                <column datatype='integer' name='Weak Foot' ordinal='10' />
                <column datatype='string' name='Skill Moves' ordinal='11' />
                <column datatype='string' name='Work Rate' ordinal='12' />
                <column datatype='string' name='Body Type' ordinal='13' />
                <column datatype='string' name='Real Face' ordinal='14' />
                <column datatype='string' name='Position' ordinal='15' />
                <column datatype='string' name='Jersey Number' ordinal='16' />
                <column datatype='string' name='Joined' ordinal='17' />
                <column datatype='string' name='Contract Valid Until' ordinal='18' />
                <column datatype='string' name='Height' ordinal='19' />
                <column datatype='integer' name='Weight' ordinal='20' />
              </columns>
            </relation>
          </relation>
          <relation all='true' name='Page    1 Table  1+' type='union'>
            <columns header='yes'>
              <column datatype='string' name='ID' />
              <column datatype='string' name='Name' />
              <column datatype='string' name='Club' />
              <column datatype='integer' name='Value' />
              <column datatype='integer' name='Wage' />
              <column datatype='integer' name='Release Clause' />
              <column datatype='string' name='Table Name' />
            </columns>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page    1 Table  1' table='[&apos;Page    1 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F41:no:A1:F41:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page    2 Table  1' table='[&apos;Page    2 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page    3 Table  1' table='[&apos;Page    3 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page    4 Table  1' table='[&apos;Page    4 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page    5 Table  1' table='[&apos;Page    5 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page    6 Table  1' table='[&apos;Page    6 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page    7 Table  1' table='[&apos;Page    7 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page    8 Table  1' table='[&apos;Page    8 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page    9 Table  1' table='[&apos;Page    9 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   10 Table  1' table='[&apos;Page   10 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   11 Table  1' table='[&apos;Page   11 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   12 Table  1' table='[&apos;Page   12 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   13 Table  1' table='[&apos;Page   13 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   14 Table  1' table='[&apos;Page   14 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   15 Table  1' table='[&apos;Page   15 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   16 Table  1' table='[&apos;Page   16 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   17 Table  1' table='[&apos;Page   17 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   18 Table  1' table='[&apos;Page   18 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   19 Table  1' table='[&apos;Page   19 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   20 Table  1' table='[&apos;Page   20 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   21 Table  1' table='[&apos;Page   21 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   22 Table  1' table='[&apos;Page   22 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   23 Table  1' table='[&apos;Page   23 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   24 Table  1' table='[&apos;Page   24 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   25 Table  1' table='[&apos;Page   25 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   26 Table  1' table='[&apos;Page   26 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   27 Table  1' table='[&apos;Page   27 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   28 Table  1' table='[&apos;Page   28 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   29 Table  1' table='[&apos;Page   29 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   30 Table  1' table='[&apos;Page   30 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   31 Table  1' table='[&apos;Page   31 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F47:no:A1:F47:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
            <relation connection='pdf.1coyo0e0pkxahw1ecwao80r0zw5x' name='Page   32 Table  1' table='[&apos;Page   32 Table  1$&apos;]' type='table'>
              <columns gridOrigin='A1:F45:no:A1:F45:0' header='yes' outcome='2'>
                <column datatype='string' name='ID' ordinal='0' />
                <column datatype='string' name='Name' ordinal='1' />
                <column datatype='string' name='Club' ordinal='2' />
                <column datatype='string' name='Value' ordinal='3' />
                <column datatype='string' name='Wage' ordinal='4' />
                <column datatype='string' name='Release Clause' ordinal='5' />
              </columns>
            </relation>
          </relation>
        </relation>
        <cols>
          <map key='[Age]' value='[English Players+].[Age]' />
          <map key='[Body Type]' value='[English Players+].[Body Type]' />
          <map key='[Club]' value='[Page    1 Table  1+].[Club]' />
          <map key='[Contract Valid Until]' value='[English Players+].[Contract Valid Until]' />
          <map key='[Height]' value='[English Players+].[Height]' />
          <map key='[ID (Page    1 Table  1+)]' value='[Page    1 Table  1+].[ID]' />
          <map key='[ID]' value='[English Players+].[ID]' />
          <map key='[International Reputation]' value='[English Players+].[International Reputation]' />
          <map key='[Jersey Number]' value='[English Players+].[Jersey Number]' />
          <map key='[Joined]' value='[English Players+].[Joined]' />
          <map key='[Name (Page    1 Table  1+)]' value='[Page    1 Table  1+].[Name]' />
          <map key='[Name]' value='[English Players+].[Name]' />
          <map key='[Nationality]' value='[English Players+].[Nationality]' />
          <map key='[Overall]' value='[English Players+].[Overall]' />
          <map key='[Photo]' value='[English Players+].[Photo]' />
          <map key='[Position]' value='[English Players+].[Position]' />
          <map key='[Potential]' value='[English Players+].[Potential]' />
          <map key='[Preferred Foot]' value='[English Players+].[Preferred Foot]' />
          <map key='[Real Face]' value='[English Players+].[Real Face]' />
          <map key='[Release Clause]' value='[Page    1 Table  1+].[Release Clause]' />
          <map key='[Sheet]' value='[English Players+].[Sheet]' />
          <map key='[Skill Moves]' value='[English Players+].[Skill Moves]' />
          <map key='[Special]' value='[English Players+].[Special]' />
          <map key='[Table Name (Page    1 Table  1+)]' value='[Page    1 Table  1+].[Table Name]' />
          <map key='[Table Name]' value='[English Players+].[Table Name]' />
          <map key='[Value]' value='[Page    1 Table  1+].[Value]' />
          <map key='[Wage]' value='[Page    1 Table  1+].[Wage]' />
          <map key='[Weak Foot]' value='[English Players+].[Weak Foot]' />
          <map key='[Weight]' value='[English Players+].[Weight]' />
          <map key='[Work Rate]' value='[English Players+].[Work Rate]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[English Players+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photo</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Photo]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Photo</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nationality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Nationality]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Nationality</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overall</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Overall]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Overall</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Potential</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Potential]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Potential</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Special</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Special]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Special</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Preferred Foot</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Preferred Foot]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Preferred Foot</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International Reputation</remote-name>
            <remote-type>20</remote-type>
            <local-name>[International Reputation]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>International Reputation</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weak Foot</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weak Foot]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Weak Foot</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Skill Moves</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Skill Moves]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Skill Moves</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Work Rate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Work Rate]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Work Rate</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Body Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Body Type]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Body Type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Real Face</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Real Face]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Real Face</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Position</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Position]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Position</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jersey Number</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Jersey Number]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Jersey Number</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Joined</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Joined]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Joined</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contract Valid Until</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Contract Valid Until]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Contract Valid Until</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Height</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Height]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Height</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sheet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sheet]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Sheet</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[English Players+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Page    1 Table  1+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ID (Page    1 Table  1+)]</local-name>
            <parent-name>[Page    1 Table  1+]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name (Page    1 Table  1+)]</local-name>
            <parent-name>[Page    1 Table  1+]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Club</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Club]</local-name>
            <parent-name>[Page    1 Table  1+]</parent-name>
            <remote-alias>Club</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Page    1 Table  1+]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Wage]</local-name>
            <parent-name>[Page    1 Table  1+]</parent-name>
            <remote-alias>Wage</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Release Clause</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Release Clause]</local-name>
            <parent-name>[Page    1 Table  1+]</parent-name>
            <remote-alias>Release Clause</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name (Page    1 Table  1+)]</local-name>
            <parent-name>[Page    1 Table  1+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Height (Inches)' datatype='integer' name='[Calculation_1878282534626430976]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Height - Split 1]*12)+[Height - Split 2]' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_1878282534656450563]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Height - Split 1' datatype='integer' name='[Height - Split 1]' role='measure' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.12uwyh20n6ys001ev15ri005o5ef].[Height]'>
        <calculation class='tableau' formula='INT( SPLIT( [Height], &quot;&apos;&quot;, 1 ) )' />
      </column>
      <column caption='Height - Split 2' datatype='integer' name='[Height - Split 2]' role='measure' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.12uwyh20n6ys001ev15ri005o5ef].[Height]'>
        <calculation class='tableau' formula='INT( SPLIT( [Height], &quot;&apos;&quot;, 2 ) )' />
      </column>
      <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;FYR Macedonia&quot;' value='&quot;North Macedonia&quot;' />
          <semantic-value key='&quot;Korea Republic&quot;' value='&quot;South Korea&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Position (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Position]' new-bin='true'>
          <bin default-name='false' value='&quot;Defensive Positions&quot;'>
            <value>&quot;CB&quot;</value>
            <value>&quot;GK&quot;</value>
            <value>&quot;LB&quot;</value>
            <value>&quot;LCB&quot;</value>
            <value>&quot;LWB&quot;</value>
            <value>&quot;RB&quot;</value>
            <value>&quot;RCB&quot;</value>
            <value>&quot;RWB&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Forwards&quot;'>
            <value>&quot;CF&quot;</value>
            <value>&quot;LF&quot;</value>
            <value>&quot;LS&quot;</value>
            <value>&quot;RCM&quot;</value>
            <value>&quot;RDM&quot;</value>
            <value>&quot;RS&quot;</value>
            <value>&quot;ST&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Midfielders&quot;'>
            <value>&quot;CAM&quot;</value>
            <value>&quot;CDM&quot;</value>
            <value>&quot;CM&quot;</value>
            <value>&quot;LCM&quot;</value>
            <value>&quot;LDM&quot;</value>
            <value>&quot;LM&quot;</value>
            <value>&quot;LW&quot;</value>
            <value>&quot;RM&quot;</value>
            <value>&quot;RW&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Other&quot;'>
            <value>%null%</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Position]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='integer' default-format='c&quot;EUR&quot;#,##0.00;(&quot;EUR&quot;#,##0.00)' name='[Release Clause]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Skill Moves]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;1&quot;' value='Weak Skill' />
          <alias key='&quot;2&quot;' value='Below Average' />
          <alias key='&quot;3&quot;' value='Average Skill' />
          <alias key='&quot;4&quot;' value='Above Average' />
          <alias key='&quot;5&quot;' value='High Skill' />
        </aliases>
      </column>
      <column aggregation='CountD' datatype='integer' default-format='c&quot;EUR&quot;#,##0;(&quot;EUR&quot;#,##0)' name='[Value]' role='dimension' type='ordinal' />
      <column aggregation='CountD' datatype='integer' default-format='c&quot;EUR&quot;#,##0.00;(&quot;EUR&quot;#,##0.00)' name='[Wage]' role='dimension' type='ordinal' />
      <group caption='Action (Nationality)' hidden='true' name='[Action (Nationality)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Nationality]' />
        </groupfilter>
      </group>
      <group caption='Top Ten Countries by Player Value' name='[Top Ten Countries by Player Value]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Value])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Nationality]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.662031' group-percentage='0.0319889' measure-ordering='alphabetic' measure-percentage='0.247566' parameter-percentage='0.0584145' rowDisplayCount='10000' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Position (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Midfielders&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Forwards&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Defensive Positions&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Data to Blend' inline='true' name='federated.0uw94kl0av0j391fzngrk0d91f9g' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data to Blend' name='ogrdirect.1o9xifn157ap6p1acpxnb017bymq'>
            <connection class='ogrdirect' directory='C:/Users/MD/Documents' filename='Data to Blend.kml' ogr-grid-shift-folder='C:\Program Files\Tableau\Tableau 2019.2\local\proj4' password='' server='' tablename='' />
          </named-connection>
        </named-connections>
        <relation connection='ogrdirect.1o9xifn157ap6p1acpxnb017bymq' name='Data_to_Blend' table='[Data_to_Blend]' type='table'>
          <columns>
            <column datatype='string' name='Name' ordinal='0' />
            <column datatype='string' name='Description' ordinal='1' />
            <column datatype='spatial' name='Geometry' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Data_to_Blend]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[Data_to_Blend]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[Data_to_Blend]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>2</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Stadium' datatype='string' name='[Description]' role='dimension' type='nominal' />
      <column caption='Club' datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.33244' measure-ordering='alphabetic' measure-percentage='0.38874' parameter-percentage='0.27882' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Map of Countries by Player Value' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Dashboard%201?%5Bfederated.12uwyh20n6ys001ev15ri005o5ef%5D.%5BNationality%5D~s0=&lt;[Nationality]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Map of Countries by Player Value' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <datasources>
      <datasource caption='English Players+ (Player Data)' name='federated.12uwyh20n6ys001ev15ri005o5ef' />
    </datasources>
    <datasource-dependencies datasource='federated.12uwyh20n6ys001ev15ri005o5ef'>
      <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;FYR Macedonia&quot;' value='&quot;North Macedonia&quot;' />
          <semantic-value key='&quot;Korea Republic&quot;' value='&quot;South Korea&quot;' />
        </semantic-values>
      </column>
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Average Measurements by Player Position'>
      <table>
        <view>
          <datasources>
            <datasource caption='English Players+ (Player Data)' name='federated.12uwyh20n6ys001ev15ri005o5ef' />
          </datasources>
          <datasource-dependencies datasource='federated.12uwyh20n6ys001ev15ri005o5ef'>
            <column caption='Height (Inches)' datatype='integer' name='[Calculation_1878282534626430976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Height - Split 1]*12)+[Height - Split 2]' />
            </column>
            <column caption='Height - Split 1' datatype='integer' name='[Height - Split 1]' role='measure' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.12uwyh20n6ys001ev15ri005o5ef].[Height]'>
              <calculation class='tableau' formula='INT( SPLIT( [Height], &quot;&apos;&quot;, 1 ) )' />
            </column>
            <column caption='Height - Split 2' datatype='integer' name='[Height - Split 2]' role='measure' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.12uwyh20n6ys001ev15ri005o5ef].[Height]'>
              <calculation class='tableau' formula='INT( SPLIT( [Height], &quot;&apos;&quot;, 2 ) )' />
            </column>
            <column datatype='string' name='[Height]' role='dimension' type='nominal' />
            <column datatype='string' name='[Position (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Position]' new-bin='true'>
                <bin default-name='false' value='&quot;Defensive Positions&quot;'>
                  <value>&quot;CB&quot;</value>
                  <value>&quot;GK&quot;</value>
                  <value>&quot;LB&quot;</value>
                  <value>&quot;LCB&quot;</value>
                  <value>&quot;LWB&quot;</value>
                  <value>&quot;RB&quot;</value>
                  <value>&quot;RCB&quot;</value>
                  <value>&quot;RWB&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Forwards&quot;'>
                  <value>&quot;CF&quot;</value>
                  <value>&quot;LF&quot;</value>
                  <value>&quot;LS&quot;</value>
                  <value>&quot;RCM&quot;</value>
                  <value>&quot;RDM&quot;</value>
                  <value>&quot;RS&quot;</value>
                  <value>&quot;ST&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Midfielders&quot;'>
                  <value>&quot;CAM&quot;</value>
                  <value>&quot;CDM&quot;</value>
                  <value>&quot;CM&quot;</value>
                  <value>&quot;LCM&quot;</value>
                  <value>&quot;LDM&quot;</value>
                  <value>&quot;LM&quot;</value>
                  <value>&quot;LW&quot;</value>
                  <value>&quot;RM&quot;</value>
                  <value>&quot;RW&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other&quot;'>
                  <value>%null%</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Weight]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1878282534626430976]' derivation='Avg' name='[avg:Calculation_1878282534626430976:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weight]' derivation='Avg' name='[avg:Weight:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.12uwyh20n6ys001ev15ri005o5ef].[avg:Weight:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.12uwyh20n6ys001ev15ri005o5ef].[avg:Calculation_1878282534626430976:qk]' field-type='quantitative' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12uwyh20n6ys001ev15ri005o5ef].[Position (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12uwyh20n6ys001ev15ri005o5ef].[avg:Weight:qk]</rows>
        <cols>[federated.12uwyh20n6ys001ev15ri005o5ef].[avg:Calculation_1878282534626430976:qk]</cols>
      </table>
      <simple-id uuid='{6D6B91B5-7D0D-46D7-BCEC-CF1C93E6BF38}' />
    </worksheet>
    <worksheet name='Map of Countries by Player Value'>
      <table>
        <view>
          <datasources>
            <datasource caption='English Players+ (Player Data)' name='federated.12uwyh20n6ys001ev15ri005o5ef' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12uwyh20n6ys001ev15ri005o5ef'>
            <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;FYR Macedonia&quot;' value='&quot;North Macedonia&quot;' />
                <semantic-value key='&quot;Korea Republic&quot;' value='&quot;South Korea&quot;' />
              </semantic-values>
            </column>
            <column aggregation='CountD' datatype='integer' default-format='c&quot;EUR&quot;#,##0;(&quot;EUR&quot;#,##0)' name='[Value]' role='dimension' type='ordinal' />
            <column-instance column='[Nationality]' derivation='None' name='[none:Nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12uwyh20n6ys001ev15ri005o5ef].[Top Ten Countries by Player Value]' />
          <slices>
            <column>[federated.12uwyh20n6ys001ev15ri005o5ef].[Top Ten Countries by Player Value]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]' />
              <lod column='[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Nationality:nk]' />
              <geometry column='[federated.12uwyh20n6ys001ev15ri005o5ef].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12uwyh20n6ys001ev15ri005o5ef].[Latitude (generated)]</rows>
        <cols>[federated.12uwyh20n6ys001ev15ri005o5ef].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2B9F6DE9-93E1-4573-861B-FB2B82683927}' />
    </worksheet>
    <worksheet name='Player Value by Club and Nationality'>
      <table>
        <view>
          <datasources>
            <datasource caption='English Players+ (Player Data)' name='federated.12uwyh20n6ys001ev15ri005o5ef' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12uwyh20n6ys001ev15ri005o5ef'>
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Nationality]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;FYR Macedonia&quot;' value='&quot;North Macedonia&quot;' />
                <semantic-value key='&quot;Korea Republic&quot;' value='&quot;South Korea&quot;' />
              </semantic-values>
            </column>
            <column aggregation='CountD' datatype='integer' default-format='c&quot;EUR&quot;#,##0;(&quot;EUR&quot;#,##0)' name='[Value]' role='dimension' type='ordinal' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Nationality]' derivation='None' name='[none:Nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12uwyh20n6ys001ev15ri005o5ef].[Action (Nationality)]'>
            <groupfilter function='level-members' level='[Nationality]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12uwyh20n6ys001ev15ri005o5ef].[Action (Nationality)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Nationality:nk]' value='88' />
            <format attr='width' field='[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Club:nk]' value='64' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.12uwyh20n6ys001ev15ri005o5ef].[none:Club:nk] / ([federated.12uwyh20n6ys001ev15ri005o5ef].[none:Nationality:nk] / [federated.12uwyh20n6ys001ev15ri005o5ef].[none:Name:nk]))</rows>
        <cols />
      </table>
      <simple-id uuid='{A77993B7-EBF6-4F48-ACA4-DED88C7855F9}' />
    </worksheet>
    <worksheet name='Top Five Players by Position'>
      <table>
        <view>
          <datasources>
            <datasource caption='English Players+ (Player Data)' name='federated.12uwyh20n6ys001ev15ri005o5ef' />
          </datasources>
          <datasource-dependencies datasource='federated.12uwyh20n6ys001ev15ri005o5ef'>
            <column caption='Index' datatype='integer' name='[Calculation_1878282534656450563]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Position (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Position]' new-bin='true'>
                <bin default-name='false' value='&quot;Defensive Positions&quot;'>
                  <value>&quot;CB&quot;</value>
                  <value>&quot;GK&quot;</value>
                  <value>&quot;LB&quot;</value>
                  <value>&quot;LCB&quot;</value>
                  <value>&quot;LWB&quot;</value>
                  <value>&quot;RB&quot;</value>
                  <value>&quot;RCB&quot;</value>
                  <value>&quot;RWB&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Forwards&quot;'>
                  <value>&quot;CF&quot;</value>
                  <value>&quot;LF&quot;</value>
                  <value>&quot;LS&quot;</value>
                  <value>&quot;RCM&quot;</value>
                  <value>&quot;RDM&quot;</value>
                  <value>&quot;RS&quot;</value>
                  <value>&quot;ST&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Midfielders&quot;'>
                  <value>&quot;CAM&quot;</value>
                  <value>&quot;CDM&quot;</value>
                  <value>&quot;CM&quot;</value>
                  <value>&quot;LCM&quot;</value>
                  <value>&quot;LDM&quot;</value>
                  <value>&quot;LM&quot;</value>
                  <value>&quot;LW&quot;</value>
                  <value>&quot;RM&quot;</value>
                  <value>&quot;RW&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other&quot;'>
                  <value>%null%</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='integer' default-format='c&quot;EUR&quot;#,##0;(&quot;EUR&quot;#,##0)' name='[Value]' role='dimension' type='ordinal' />
            <column-instance column='[ID]' derivation='None' name='[none:ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1878282534656450563]' derivation='User' name='[usr:Calculation_1878282534656450563:ok:7]' pivot='key' type='ordinal'>
              <table-calc level-break='[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Name:nk]' ordering-type='Field'>
                <order field='[federated.12uwyh20n6ys001ev15ri005o5ef].[Position (group)]' />
                <order field='[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Name:nk]' />
                <order field='[federated.12uwyh20n6ys001ev15ri005o5ef].[ID]' />
                <sort direction='DESC' using='[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12uwyh20n6ys001ev15ri005o5ef].[usr:Calculation_1878282534656450563:ok:7]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_1878282534656450563:ok:7]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_1878282534656450563:ok:7]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_1878282534656450563:ok:7]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_1878282534656450563:ok:7]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_1878282534656450563:ok:7]' member='5' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.12uwyh20n6ys001ev15ri005o5ef].[usr:Calculation_1878282534656450563:ok:7]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.12uwyh20n6ys001ev15ri005o5ef].[none:ID:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.12uwyh20n6ys001ev15ri005o5ef].[Position (group)] / [federated.12uwyh20n6ys001ev15ri005o5ef].[none:Name:nk])</rows>
        <cols>[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]</cols>
      </table>
      <simple-id uuid='{5971EEEB-4BB8-4562-9589-624950916170}' />
    </worksheet>
    <worksheet name='Top Teams by Player Value Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data to Blend' name='federated.0uw94kl0av0j391fzngrk0d91f9g' />
            <datasource name='Parameters' />
            <datasource caption='English Players+ (Player Data)' name='federated.12uwyh20n6ys001ev15ri005o5ef' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Top Five Teams' caption='Top Teams by Player Value' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <aliases>
                <alias key='1' value='Top Team' />
                <alias key='5' value='Top Five Teams' />
                <alias key='10' value='Top Ten Teams' />
                <alias key='20' value='Top Twenty Teams' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0uw94kl0av0j391fzngrk0d91f9g'>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='Club' datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.12uwyh20n6ys001ev15ri005o5ef'>
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='integer' default-format='c&quot;EUR&quot;#,##0;(&quot;EUR&quot;#,##0)' name='[Value]' role='dimension' type='ordinal' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Club:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Value])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Club:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Club:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]' />
              <lod column='[federated.0uw94kl0av0j391fzngrk0d91f9g].[clct:Geometry:nk]' />
              <lod column='[federated.0uw94kl0av0j391fzngrk0d91f9g].[none:Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='208' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0uw94kl0av0j391fzngrk0d91f9g].[Latitude (generated)]</rows>
        <cols>[federated.0uw94kl0av0j391fzngrk0d91f9g].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3E4F6BF3-268E-4A4A-8FDE-1EF6FFB735D4}' />
    </worksheet>
    <worksheet name='Total Player Value by Club'>
      <table>
        <view>
          <datasources>
            <datasource caption='English Players+ (Player Data)' name='federated.12uwyh20n6ys001ev15ri005o5ef' />
          </datasources>
          <datasource-dependencies datasource='federated.12uwyh20n6ys001ev15ri005o5ef'>
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column datatype='string' name='[Position (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Position]' new-bin='true'>
                <bin default-name='false' value='&quot;Defensive Positions&quot;'>
                  <value>&quot;CB&quot;</value>
                  <value>&quot;GK&quot;</value>
                  <value>&quot;LB&quot;</value>
                  <value>&quot;LCB&quot;</value>
                  <value>&quot;LWB&quot;</value>
                  <value>&quot;RB&quot;</value>
                  <value>&quot;RCB&quot;</value>
                  <value>&quot;RWB&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Forwards&quot;'>
                  <value>&quot;CF&quot;</value>
                  <value>&quot;LF&quot;</value>
                  <value>&quot;LS&quot;</value>
                  <value>&quot;RCM&quot;</value>
                  <value>&quot;RDM&quot;</value>
                  <value>&quot;RS&quot;</value>
                  <value>&quot;ST&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Midfielders&quot;'>
                  <value>&quot;CAM&quot;</value>
                  <value>&quot;CDM&quot;</value>
                  <value>&quot;CM&quot;</value>
                  <value>&quot;LCM&quot;</value>
                  <value>&quot;LDM&quot;</value>
                  <value>&quot;LM&quot;</value>
                  <value>&quot;LW&quot;</value>
                  <value>&quot;RM&quot;</value>
                  <value>&quot;RW&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other&quot;'>
                  <value>%null%</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='integer' default-format='c&quot;EUR&quot;#,##0;(&quot;EUR&quot;#,##0)' name='[Value]' role='dimension' type='ordinal' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[Value]' derivation='Sum' name='[sum:Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.12uwyh20n6ys001ev15ri005o5ef].[Position (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Defensive Positions&quot;</bucket>
              <bucket>&quot;Forwards&quot;</bucket>
              <bucket>&quot;Midfielders&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Club:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12uwyh20n6ys001ev15ri005o5ef].[Position (group)]' />
            </encodings>
            <reference-line axis-column='[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]' enable-instant-analytics='true' formula='sum' id='refline0' label-type='value' scope='per-cell' value-column='[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]' z-order='1' />
            <reference-line axis-column='[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]' enable-instant-analytics='true' formula='average' id='refline1' label='&lt;Computation&gt; &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Club:nk]</rows>
        <cols>[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]</cols>
      </table>
      <simple-id uuid='{343BCDF1-A883-4C57-9D4A-7AE44B34145C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='88000' x='800' y='1000'>
              <zone h='98000' id='3' name='Map of Countries by Player Value' w='47900' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='9' name='Player Value by Club and Nationality' w='40100' x='48700' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='104' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='10400' x='88800' y='1000'>
              <zone h='8125' id='8' name='Map of Countries by Player Value' pane-specification-id='0' param='[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]' type='color' w='10400' x='88800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='10' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='11' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Map of Countries by Player Value' w='47900' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Map of Countries by Player Value' pane-specification-id='0' param='[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]' type='color' w='10400' x='88800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='9' is-fixed='true' name='Player Value by Club and Nationality' w='40100' x='48700' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FFB4FFA2-E04F-4A70-9ADA-4BBAAFA448A8}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Total Player Value by Club'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12uwyh20n6ys001ev15ri005o5ef].[Position (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Club:nk]</field>
                </fields>
                <multibucket>
                  <bucket>%all%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[Position (group)]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Club:nk]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Position:nk]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Value:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62788EA7-B621-47F0-8466-245F181086A9}' />
    </window>
    <window class='worksheet' name='Average Measurements by Player Position'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12uwyh20n6ys001ev15ri005o5ef].[Position (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[Position (group)]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Club:nk]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Value:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E4C64C62-EF62-41BF-975C-4024C34E448A}' />
    </window>
    <window class='worksheet' name='Top Teams by Player Value Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]' type='size' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0uw94kl0av0j391fzngrk0d91f9g].[none:Name:nk]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Club:nk]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Value:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C085F716-A05A-45F1-9491-1305295D1A1E}' />
    </window>
    <window class='worksheet' maximized='true' name='Map of Countries by Player Value'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[Top Ten Countries by Player Value]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Nationality:nk]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[sum:Value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF37D72C-4E60-46DE-BC52-8BE15B7B27A8}' />
    </window>
    <window class='worksheet' name='Player Value by Club and Nationality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Club:nk]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C926E6C-8C5B-4456-B6E9-8E019C83DC19}' />
    </window>
    <window class='worksheet' name='Top Five Players by Position'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[Position (group)]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[Position (group)]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:ID:nk]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Name:nk]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Position:nk]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[none:Value:nk]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[usr:Calculation_1878282534656450563:ok:6]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[usr:Calculation_1878282534656450563:ok:7]</field>
            <field>[federated.12uwyh20n6ys001ev15ri005o5ef].[usr:Calculation_1878282534656450563:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E88645E1-2030-4443-B0B1-D9C4899C1CFD}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Map of Countries by Player Value'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Player Value by Club and Nationality' />
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{562AE806-3D19-429A-B68B-EF1413E2857D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Measurements by Player Position' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map of Countries by Player Value' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Player Value by Club and Nationality' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Five Players by Position' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Teams by Player Value Map' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Player Value by Club' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
